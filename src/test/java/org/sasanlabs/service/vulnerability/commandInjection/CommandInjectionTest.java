package org.sasanlabs.service.vulnerability.commandInjection;

import java.io.IOException;
import java.net.URI;
import org.junit.jupiter.api.Test;
import org.sasanlabs.service.exception.ServiceApplicationException;
import org.sasanlabs.service.vulnerability.bean.GenericVulnerabilityResponseBean;
import org.springframework.http.HttpMethod;
import org.springframework.http.HttpStatus;
import org.springframework.http.RequestEntity;
import org.springframework.http.ResponseEntity;
import org.springframework.util.Assert;

public class CommandInjectionTest {

    CommandInjection commandInjection = new CommandInjection();
    private String wrongUrl = "localhsost";

    @Test
    public void getVulnerablePayloadLevel1_Localhost_ExpectPingSuccess() throws IOException {
        ResponseEntity<GenericVulnerabilityResponseBean<String>> responseEntity =
                commandInjection.getVulnerablePayloadLevel1("127.0.0.1");
        Assert.isTrue(
                responseEntity
                        .getBody()
                        .getContent()
                        .startsWith("PING 127.0.0.1 (127.0.0.1): 56 data bytes"),
                "must get response");
        Assert.isTrue(HttpStatus.OK == responseEntity.getStatusCode(), "must equal");
        Assert.isTrue(responseEntity.getBody().getIsValid(), "must equal");
    }

    @Test
    public void getVulnerablePayloadLevel1_WrongHost_ExpectPingSuccess() throws IOException {
        ResponseEntity<GenericVulnerabilityResponseBean<String>> responseEntity =
                commandInjection.getVulnerablePayloadLevel1(wrongUrl);
        Assert.isTrue(
                "ping: cannot resolve localhsost: Unknown host\n"
                        .equals(responseEntity.getBody().getContent()),
                "must equal");
        Assert.isTrue(HttpStatus.OK == responseEntity.getStatusCode(), "must equal");
        Assert.isTrue(responseEntity.getBody().getIsValid(), "must equal");
    }

    @Test
    public void getVulnerablePayloadLevel2_WrongHost_Return_OKAnd()
            throws ServiceApplicationException, IOException {
        RequestEntity entity = new RequestEntity(HttpMethod.GET, URI.create("localhost"));
        ResponseEntity<GenericVulnerabilityResponseBean<String>> responseEntity =
                commandInjection.getVulnerablePayloadLevel2("localhost", entity);

        Assert.isTrue(
                responseEntity
                        .getBody()
                        .getContent()
                        .startsWith("PING localhost (127.0.0.1): 56 data bytes"),
                "must get response");
        Assert.isTrue(HttpStatus.OK == responseEntity.getStatusCode(), "must equal");
        Assert.isTrue(responseEntity.getBody().getIsValid(), "must equal");
    }

    @Test
    public void getVulnerablePayloadLevel2_WrongHost_Return_NotResolve()
            throws ServiceApplicationException, IOException {
        RequestEntity entity = new RequestEntity(HttpMethod.GET, URI.create(wrongUrl));
        ResponseEntity<GenericVulnerabilityResponseBean<String>> responseEntity =
                commandInjection.getVulnerablePayloadLevel2(wrongUrl, entity);

        Assert.isTrue(
                "ping: cannot resolve localhsost: Unknown host\n"
                        .equals(responseEntity.getBody().getContent()),
                "must equal");
        Assert.isTrue(HttpStatus.OK == responseEntity.getStatusCode(), "must equal");
        Assert.isTrue(responseEntity.getBody().getIsValid(), "must equal");
    }
}
