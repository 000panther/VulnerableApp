package org.sasanlabs.service.vulnerability.sqlInjection;


import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mockito;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.PreparedStatementSetter;
import org.springframework.jdbc.core.ResultSetExtractor;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import static org.mockito.ArgumentMatchers.*;
import static org.mockito.Mockito.*;

class UnionBasedSQLInjectionVulnerabilityTest {

    private UnionBasedSQLInjectionVulnerability unionBasedSQLInjectionVulnerability;
    private JdbcTemplate template;

    @BeforeEach
    void setUp() throws IOException {
        template = Mockito.spy(new JdbcTemplate());

        doReturn(null)
                .when(template)
                .query(anyString(), (ResultSetExtractor<? extends Object>) any());

        unionBasedSQLInjectionVulnerability = Mockito.spy(new UnionBasedSQLInjectionVulnerability(template));
    }

    @Test
    void getCarInformationLevel1_ExpectParamInjected() throws IOException {
        // Act
        final Map<String, String> params = new HashMap<>();
        params.put("id", "1 UNION SELECT * FROM cars;");
        unionBasedSQLInjectionVulnerability.getCarInformationLevel1(params);

        // Assert
        verify(template).query(eq("select * from cars where id=1 UNION SELECT * FROM cars;"), (ResultSetExtractor<? extends Object>) any());
    }

    @Test
    void getCarInformationLevel2_ExpectParamInjected() throws IOException {
        // Act
        Map<String, String> params = new HashMap();
        params.put("id", "1' UNION SELECT * FROM cars; --");
        unionBasedSQLInjectionVulnerability.getCarInformationLevel2(params);

        // Assert
        verify(template).query(eq("select * from cars where id='1' UNION SELECT * FROM cars; --'"), (ResultSetExtractor<? extends Object>) any());
    }

    @Test
    void getCarInformationLevel3_ExpectParamEscaped() throws IOException {
        // Act
        Map<String, String> params = new HashMap();
        params.put("id", "1' UNION SELECT * FROM cars; --");
        unionBasedSQLInjectionVulnerability.getCarInformationLevel3(params);

        // Assert
        verify(template).query(eq("select * from cars where id='1 UNION SELECT * FROM cars; --'"), (ResultSetExtractor<? extends Object>) any());

    }

    @Test
    void getCarInformationLevel4_ExpectParamEscaped() throws IOException {
        // Setup
        template = Mockito.spy(new JdbcTemplate());
        PreparedStatementSetter setter = (ps) -> {};
        doReturn(null)
                .when(template)
                .query(anyString(), (PreparedStatementSetter) any(), (ResultSetExtractor<? extends Object>) any());

        unionBasedSQLInjectionVulnerability = Mockito.spy(new UnionBasedSQLInjectionVulnerability(template));

        // Act
        Map<String, String> params = new HashMap();
        params.put("id", "1' UNION SELECT * FROM cars; --");
        unionBasedSQLInjectionVulnerability.getCarInformationLevel4(params);

        // Assert
        verify(template).query(eq("select * from cars where id=?"), (PreparedStatementSetter) any(), (ResultSetExtractor<? extends Object>) any());

    }

//    private JdbcTemplate applicationJdbcTemplate;
//
//    public UnionBasedSQLInjectionVulnerabilityTest(
//            @Qualifier("applicationJdbcTemplate") JdbcTemplate applicationJdbcTemplate) {
//        this.applicationJdbcTemplate = applicationJdbcTemplate;
//    }
//
//    @AttackVector(
//            vulnerabilityExposed = VulnerabilityType.UNION_BASED_SQL_INJECTION,
//            description = "UNION_SQL_INJECTION_URL_PARAM_APPENDED_DIRECTLY_TO_QUERY",
//            payload = "UNION_BASED_SQL_INJECTION_PAYLOAD_LEVEL_1")
//    @VulnerableAppRequestMapping(
//            value = LevelConstants.LEVEL_1,
//            htmlTemplate = "LEVEL_1/SQLInjection_Level1")
//    public ResponseEntity<CarInformation> getCarInformationLevel1(
//            @RequestParam Map<String, String> queryParams) {
//        String id = queryParams.get("id");
//        return applicationJdbcTemplate.query(
//                "select * from cars where id=" + id,
//                (rs) -> {
//                    CarInformation carInformation = new CarInformation();
//                    if (rs.next()) {
//                        carInformation.setId(rs.getInt(1));
//                        carInformation.setName(rs.getString(2));
//                        carInformation.setImagePath(rs.getString(3));
//                    }
//                    return new ResponseEntity<CarInformation>(carInformation, HttpStatus.OK);
//                });
//    }
//
//    @AttackVector(
//            vulnerabilityExposed = VulnerabilityType.UNION_BASED_SQL_INJECTION,
//            description =
//                    "UNION_SQL_INJECTION_URL_PARAM_WRAPPED_WITH_SINGLE_QUOTE_APPENDED_TO_QUERY",
//            payload = "UNION_BASED_SQL_INJECTION_PAYLOAD_LEVEL_2")
//    @VulnerableAppRequestMapping(
//            value = LevelConstants.LEVEL_2,
//            htmlTemplate = "LEVEL_1/SQLInjection_Level1")
//    public ResponseEntity<CarInformation> getCarInformationLevel2(
//            @RequestParam Map<String, String> queryParams) {
//        String id = queryParams.get("id");
//        CarInformation carInformation = new CarInformation();
//        return applicationJdbcTemplate.query(
//                "select * from cars where id='" + id + "'",
//                (rs) -> {
//                    if (rs.next()) {
//                        carInformation.setId(rs.getInt(1));
//                        carInformation.setName(rs.getString(2));
//                        carInformation.setImagePath(rs.getString(3));
//                    }
//                    return new ResponseEntity<CarInformation>(carInformation, HttpStatus.OK);
//                });
//    }
//
//    @AttackVector(
//            vulnerabilityExposed = VulnerabilityType.UNION_BASED_SQL_INJECTION,
//            description =
//                    "UNION_SQL_INJECTION_URL_PARAM_REMOVES_SINGLE_QUOTE_WITH_SINGLE_QUOTE_APPENDED_TO_QUERY")
//    @VulnerableAppRequestMapping(
//            value = LevelConstants.LEVEL_3,
//            variant = Variant.SECURE,
//            htmlTemplate = "LEVEL_1/SQLInjection_Level1")
//    public ResponseEntity<CarInformation> getCarInformationLevel3(
//            @RequestParam Map<String, String> queryParams) {
//        String id = queryParams.get("id").replaceAll("'", "");
//        return applicationJdbcTemplate.query(
//                "select * from cars where id='" + id + "'",
//                (rs) -> {
//                    CarInformation carInformation = new CarInformation();
//                    if (rs.next()) {
//                        carInformation.setId(rs.getInt(1));
//                        carInformation.setName(rs.getString(2));
//                        carInformation.setImagePath(rs.getString(3));
//                    }
//                    return new ResponseEntity<CarInformation>(carInformation, HttpStatus.OK);
//                });
//    }
//
//    @VulnerableAppRequestMapping(
//            value = LevelConstants.LEVEL_4,
//            variant = Variant.SECURE,
//            htmlTemplate = "LEVEL_1/SQLInjection_Level1")
//    public ResponseEntity<CarInformation> getCarInformationLevel4(
//            @RequestParam Map<String, String> queryParams) {
//        String id = queryParams.get("id");
//
//        return applicationJdbcTemplate.query(
//                "select * from cars where id=?",
//                (prepareStatement) -> {
//                    prepareStatement.setString(1, id);
//                },
//                (rs) -> {
//                    CarInformation carInformation = new CarInformation();
//                    if (rs.next()) {
//                        carInformation.setId(rs.getInt(1));
//                        carInformation.setName(rs.getString(2));
//                        carInformation.setImagePath(rs.getString(3));
//                    }
//                    return new ResponseEntity<CarInformation>(carInformation, HttpStatus.OK);
//                });
//    }
}
