package org.sasanlabs.service.vulnerability.nosqlInjection.mongo.service;

import java.util.Optional;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.sasanlabs.service.vulnerability.nosqlInjection.mongo.bean.UserBean;
import org.sasanlabs.service.vulnerability.nosqlInjection.mongo.entities.UserEntity;
import org.sasanlabs.service.vulnerability.nosqlInjection.mongo.repository.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

/**
 * @author KSASAN preetkaran20@gmail.com
 *
 */
@Service
public class MongoDBServiceImpl implements MongoDBService {

	private UserRepository userRepository;

	private static final transient Logger LOGGER = LogManager.getLogger(MongoDBServiceImpl.class);

	@Autowired
	public MongoDBServiceImpl(UserRepository userRepository) {
		this.userRepository = userRepository;
	}

	@Override
	public UserBean getUserInfoById(String id) {
		Optional<UserEntity> optional = userRepository.findById(id);
		if(optional.isPresent()) {
			UserBean userBean = new UserBean();
			userBean.setDob(optional.get().getDob());
			userBean.setId(optional.get().getId());
			userBean.setName(optional.get().getName());
			return userBean;
		}
		LOGGER.debug("User info for Id {} is not present", id);
		return null;
	}


}
