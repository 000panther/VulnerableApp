package org.sasanlabs.service.vulnerability.nosqlInjection.mongo.service;

import java.util.List;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.sasanlabs.service.vulnerability.nosqlInjection.mongo.bean.UserBean;
import org.sasanlabs.service.vulnerability.nosqlInjection.mongo.entities.UserEntity;
import org.sasanlabs.service.vulnerability.nosqlInjection.mongo.repository.VulnerableRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

/**
 * @author KSASAN preetkaran20@gmail.com
 * 
 * 
 *         As we are writing custom queries, please ensure that incase we are
 *         searching with userId but as we specified it as @Id field in entity
 *         so Mongo will map that field with _id field so while querying with
 *         userId, change query to _id. More information :-
 *         https://stackoverflow.com/questions/27387335/spring-data-mongodb-id-mapping-preference
 */
//@Service
public class MongoDBVulnerableServiceImpl implements MongoDBService {

	private VulnerableRepository vulnerableRepository;

	private static final transient Logger LOGGER = LogManager.getLogger(MongoDBVulnerableServiceImpl.class);
	
	//@Autowired
	public MongoDBVulnerableServiceImpl(VulnerableRepository vulnerableRepository) {
		this.vulnerableRepository = vulnerableRepository;
	}

	@Override
	public UserBean getUserInfoById(String id) {
		List<UserEntity> userEntityList = vulnerableRepository.findByFilter("{_id : " + id + "}", UserEntity.class, "userEntity");
		UserBean userBean = new UserBean();
		if(userEntityList.size() > 0) {
			UserEntity userEntity =  userEntityList.get(0);
			userBean.setName(userEntity.getName());
			userBean.setDob(userEntity.getDob());
			userBean.setId(userEntity.getId());
			LOGGER.error(userBean);
			return userBean;
		}
		return null;
	}
}
