package org.sasanlabs.service.vulnerability.fileupload;

import java.io.UnsupportedEncodingException;
import java.util.Map;
import org.sasanlabs.internal.utility.LevelConstants;
import org.sasanlabs.internal.utility.annotations.AttackVector;
import org.sasanlabs.internal.utility.annotations.VulnerableAppRequestMapping;
import org.sasanlabs.internal.utility.annotations.VulnerableAppRestController;
import org.sasanlabs.service.exception.ServiceApplicationException;
import org.sasanlabs.service.vulnerability.bean.GenericVulnerabilityResponseBean;
import org.sasanlabs.vulnerability.types.VulnerabilitySubType;
import org.sasanlabs.vulnerability.types.VulnerabilityType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

/** @author KSASAN preetkaran20@gmail.com */
@VulnerableAppRestController(
        descriptionLabel = "UNRESTRICTED_FILE_UPLOAD_VULNERABILITY",
        value = "UnrestrictedFileUpload",
        type = {VulnerabilityType.UNRESTRICTED_FILE_UPLOAD})
public class UnrestrictedFileUpload {

    /** https://bezkoder.com/spring-boot-file-upload/ READ it */
    @AttackVector(
            vulnerabilityExposed = VulnerabilitySubType.CLIENT_SIDE_VULNERABLE_JWT,
            description = "JWT_URL_EXPOSING_SECURE_INFORMATION")
    @VulnerableAppRequestMapping(
            value = LevelConstants.LEVEL_1,
            descriptionLabel = "URL_CONTAINING_JWT_TOKEN",
            htmlTemplate = "LEVEL_1/FileUpload",
            parameterName = "",
            sampleValues = "",
            requestMethod = RequestMethod.GET)
    public ResponseEntity<GenericVulnerabilityResponseBean<String>>
            getVulnerablePayloadLevelUnsecure(@RequestParam Map<String, String> queryParams)
                    throws UnsupportedEncodingException, ServiceApplicationException {
        return null;
    }
}
